/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/GRlcOVtzuD9
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Prata } from 'next/font/google'
import { Yeseva_One } from 'next/font/google'

prata({
  subsets: ['latin'],
  display: 'swap',
})

yeseva_one({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

import Link from "next/link"
import { NavigationMenu, NavigationMenuList, NavigationMenuItem, NavigationMenuLink } from "@/components/ui/navigation-menu"
import { Separator } from "@/components/ui/separator"
import { prisma } from "@/lib/connect"
import { stripHtml } from "@/lib/stripHtml"

export async function Editorials() {

  const newEditorials = await prisma.article.findFirst({

    where:{
      isEditorial:true
    },
    orderBy: {
      createdAt: 'desc',
    }
    
  })

  const trendingEitorials = await prisma.article.findMany({

    where:{
      isEditorial:true,
      isTrending:true
    },
    orderBy: {
      createdAt: 'desc',
    }
    
  })

  const otherEitorials = await prisma.article.findMany({

    where:{
      isEditorial:true,
      isTrending:false
    },
    orderBy: {
      createdAt: 'desc',
    }
    
  })

  return (
    <div className="mt-10 dark:bg-gray-950">
      <div className="container mx-auto w-fit bg-[green] py-1 px-5">Editorials</div>
      <main className="container mx-auto px-4 py-8  grid grid-cols-1 md:grid-cols-3 gap-8">
        <div className="border-x px-2">
            <img
              src={`${newEditorials?.img}`}
              alt={newEditorials?.title}
              width={800}
              height={400}
              className="object-cover w-full h-[400px]"
            />
            <div className="mt-4">
              <h2 className="text-2xl font-bold  dark:text-gray-50 mt-2 line-clamp-1">{newEditorials?.title}</h2>
              <Link href={`/view/${newEditorials?.id}?cat=${newEditorials?.catSlug}`} className="hover:underline dark:text-gray-400 mt-2 line-clamp-6">
                {stripHtml(newEditorials?.content!)}
              </Link>
              <div className="flex items-center text-gray-500 dark:text-gray-400 text-sm mt-2">
                <UserIcon className="w-4 h-4 mr-2" />
                <span>{newEditorials?.authorName}</span>
                <span className="mx-2">·</span>
                <CalendarIcon className="w-4 h-4 mr-2" />
                <span>{newEditorials?.createdAt.toDateString()}</span>
              </div>
            </div>
         
        </div>
        <section className="border-y h-fit  py-4 grid grid-cols-1 md:grid-cols-2 gap-8">
          {trendingEitorials.map(editorial=>(
            <div key={editorial.id}>
              <img
                src={`${editorial.img}`}
                alt={`${editorial.title}`}
                width={300}
                height={200}
                className="object-cover w-full h-[200px]"
              />
            <div className="mt-4">
              <Link href="#" className="text-gray-500 dark:text-gray-400 text-sm" prefetch={false}>
              {editorial.catSlug}
              </Link>
              <Link href={`/view/${editorial?.id}?cat=${editorial?.catSlug}`} className="text-xl font-bold hover:underline  dark:text-gray-50 mt-2">{editorial.title}</Link>
              <Link href={`/view/${editorial?.id}?cat=${editorial?.catSlug}`} className=" dark:text-gray-400 mt-2 hover:underline line-clamp-2">
              {stripHtml(editorial.content)}
              </Link>
              <div className="flex items-center text-gray-500 dark:text-gray-400 text-sm mt-2">
                <UserIcon className="w-4 h-4 mr-2" />
                <span>{editorial.authorName}</span>
                <span className="mx-2">·</span>
                <CalendarIcon className="w-4 h-4 mr-2" />
                <span>{editorial.createdAt.toDateString()}</span>
              </div>
            </div>
          </div>
          ))}
            

          </section>
        <aside className="grid grid-cols-1 border-s pl-2">
          {otherEitorials.map(editorial=>(
            <div key={editorial.id} className="grid border-b grid-cols-2 items-center gap-1">
            <img
              src={`${editorial.img}`}
              width="200"
              height="150"
              alt={editorial.title}
              className="aspect-[4/3] overflow-hidden object-center object-cover"
            />
            <div className="space-y-2">
              <h3 className="text-xl font-bold line-clamp-1">{editorial.title}</h3>
              <Link href={`/view/${editorial?.id}?cat=${editorial?.catSlug}`}className="text-gray-500 hover:underline dark:text-gray-400 line-clamp-2">
                {stripHtml(editorial.content)}
              </Link>
              
            </div>
          </div>
          ))}
          <Link
                href={`/categories/editorial`}
                className="inline-flex items-center text-sm font-medium  hover:underline dark:text-gray-50"
                prefetch={false}
              >
                Read More
                <ArrowRightIcon className="ml-1 h-4 w-4" />
              </Link>
          
        </aside>
      </main>
      
    </div>
  )
}

function ArrowRightIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="m12 5 7 7-7 7" />
    </svg>
  )
}

function CalendarIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M8 2v4" />
      <path d="M16 2v4" />
      <rect width="18" height="18" x="3" y="4" rx="2" />
      <path d="M3 10h18" />
    </svg>
  )
}


function UserIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  )
}
