/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/GRlcOVtzuD9
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Prata } from 'next/font/google'
import { Yeseva_One } from 'next/font/google'

prata({
  subsets: ['latin'],
  display: 'swap',
})

yeseva_one({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

import Link from "next/link"
import { prisma } from "@/lib/connect"
import { stripHtml } from "@/lib/stripHtml"

export async function Innovations() {

  const categories = await prisma.category.findMany({
    orderBy:{
      visitors:"desc"
    }
  });

const [otherArticles,newArticles,trending] = await prisma.$transaction([
  prisma.article.findMany({
    where: {
      cat: {
        title: categories[1].title
      }
    },
    orderBy: {
      views: 'desc'
    },
    include: {
      author: true,
      cat: true
    },
    take: 3
  }),

  prisma.article.findFirst({
    where: {
      cat: {
        title: categories[1].title
      }
    },
    orderBy: {
      publishDate: 'desc'
    },
    include: {
      author: true,
      cat: true
    },
 
  }),
  prisma.article.findMany({
    where: {
      cat: {
        title: categories[1].title
      },
      isTrending:true
    },
    orderBy: {
      publishDate: 'desc'
    },
    include: {
      author: true,
      cat: true
    },
 
  })
]);


  return (
    <div className="mt-10 text-white dark:bg-gray-950">
    <div className="container mx-auto w-fit bg-red-200 py-1 px-5">{categories[1].title}</div>
      <main className="container mx-auto px-4 py-8 grid grid-cols-1 md:grid-cols-3 gap-8 border-b">
      <aside className="grid grid-cols-1">
        {
          trending.map(article=>(
            <div key={article.id} className="grid grid-cols-[200px_1fr] items-center gap-6">
                <img
                    src={`${article.img}`}
                    width="200"
                    height="150"
                    alt="Article Thumbnail"
                    className="aspect-[4/3] overflow-hidden object-cover"
                />
                <div className="space-y-2">
                <Link href={`/view/${article?.id}?cat=${article?.catSlug}`}  className="font-bold text-black">{article.title}</Link>
                    <Link href={`/view/${article?.id}?cat=${article?.catSlug}`}  className="text-gray-500 hover:underline dark:text-gray-400 line-clamp-2">
                    {stripHtml(article.content)}
                    </Link>
                </div>
              </div>
          ))
        }
          <Link
            href={`/categories/${categories[1].title}`}
            className="inline-flex items-center text-sm font-medium text-gray-900 hover:underline dark:text-gray-50"
            prefetch={false}
            >
            Read More
            <ArrowRightIcon className="ml-1 h-4 w-4" />
          </Link> 
        </aside>
        <div>
          <section className="mb-8">
            <img
              src={`${newArticles?.img}`}
              alt="Featured Article"
              width={800}
              height={400}
              className="object-cover w-full h-[400px]"
            />
            <div className="mt-4">
            <Link href={`/view/${newArticles?.id}?cat=${newArticles?.catSlug}`}  className="text-2xl hover:underline font-bold text-gray-900 dark:text-gray-50 mt-2">{newArticles?.title}</Link>
              <Link href={`/view/${newArticles?.id}?cat=${newArticles?.catSlug}`}  className="text-gray-600 dark:text-gray-400 mt-2 hover:underline line-clamp-2">
              {stripHtml(newArticles?.content!)}
              </Link>
              <div className="flex items-center text-gray-500 dark:text-gray-400 text-sm mt-2">
                <UserIcon className="w-4 h-4 mr-2" />
                <span>{newArticles?.authorName}</span>
                <span className="mx-2">Â·</span>
                <CalendarIcon className="w-4 h-4 mr-2" />
                <span>{newArticles?.createdAt.toDateString()}</span>
              </div>
            </div>
          </section>
         
        </div>
        
        <aside className="grid grid-cols-1">
        {
          otherArticles.map(article=>(
            <div key={article.id} className="grid grid-cols-[200px_1fr] items-center gap-6">
                
                <div className="space-y-2">
                    <h3 className="font-bold text-black">{article.title}</h3>
                    <Link href={`/view/${article?.id}?cat=${article?.catSlug}`}  className="text-gray-500 hover:underline dark:text-gray-400 line-clamp-2">
                    {stripHtml(article.content)}
                    </Link>
                    
                </div>
                <img
                    src={`${article.img}`}
                    width="200"
                    height="150"
                    alt="Article Thumbnail"
                    className="aspect-[4/3] overflow-hidden object-cover"
                />
              </div>
          ))
        }
          <Link
            href={`/categories/${categories[1].title}`}
            className="inline-flex items-center text-sm font-medium text-gray-900 hover:underline dark:text-gray-50"
            prefetch={false}
            >
            Read More
            <ArrowRightIcon className="ml-1 h-4 w-4" />
          </Link> 
        </aside>
      </main>
      
    </div>
  )
}

function ArrowRightIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M5 12h14" />
      <path d="m12 5 7 7-7 7" />
    </svg>
  )
}

function CalendarIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M8 2v4" />
      <path d="M16 2v4" />
      <rect width="18" height="18" x="3" y="4" rx="2" />
      <path d="M3 10h18" />
    </svg>
  )
}


function UserIcon(props: React.JSX.IntrinsicAttributes & React.SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2" />
      <circle cx="12" cy="7" r="4" />
    </svg>
  )
}
